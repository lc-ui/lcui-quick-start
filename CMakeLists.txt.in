cmake_minimum_required(VERSION 2.8)
project(app)

set(app_VERSION {{version}})

configure_file(
    "${PROJECT_SOURCE_DIR}/include/config.h.in"
    "${PROJECT_SOURCE_DIR}/include/config.h"
)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/../app)

if(WIN32)
    set(LCPKG_DIR "${PROJECT_SOURCE_DIR}/lcpkg/installed/x64-windows")
    add_definitions(-D_CRT_SECURE_NO_WARNINGS -D_UNICODE)
else()
    set(CMAKE_C_FLAGS "-Wall")
    set(LCPKG_DIR "${PROJECT_SOURCE_DIR}/lcpkg/installed/x64-linux")
endif(WIN32)

link_directories("${LCPKG_DIR}/lib")
include_directories(
    "${PROJECT_SOURCE_DIR}/include"
    "${PROJECT_SOURCE_DIR}/src/lib"
    "${LCPKG_DIR}/include"
)
aux_source_directory(src DIR_SRC)
add_subdirectory(src)
add_executable(app ${DIR_SRC})

if(WIN32)
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SUBSYSTEM:WINDOWS")
    target_link_libraries(
        app
        AppUI
        AppUIViews
        AppUIComponents
        AppLib
        optimized LCUI
        optimized LCUIMain
        debug "${LCPKG_DIR}/debug/lib/LCUI.lib"
        debug "${LCPKG_DIR}/debug/lib/LCUIMain.lib"
    )
else()
    target_link_libraries(
        app
        AppUI
        AppUIViews
        AppUIComponents
        AppLib
        debug "${LCPKG_DIR}/debug/lib/LCUI"
        optimized LCUI
    )
endif(WIN32)
